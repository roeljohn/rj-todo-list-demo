{"version":3,"sources":["settings.js","components/dateBadge.js","pages/home.js","api/GetTodosApi.js","api/CompleteTodoApi.js","api/IncompleteTodoApi.js","templates/footer.js","templates/header.js","App.js","serviceWorker.js","index.js"],"names":["settings","notification","DateBadge","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startDate","Date","endDate","currentDate","handleChangeEnd","bind","assertThisInitialized","handleChangeStart","date","setState","moment","isMoment","diff","className","_this$state","daysLeft","calculateDaysLeft","react_default","a","createElement","concat","dist_default","fromNow","Component","Home","addModal","modal","delete","dropdown","id","todoId","title","userId","completed","archived","dueDate","todos","getTodos","callback","_this2","result","data","error","console","log","axios","get","then","res","status","catch","arrId","_this3","put","CompleteTodoApi","newArray","assign","newNotification","push","_this4","IncompleteTodoApi","_this5","response","filter","todo","_this6","post","_this7","_this8","_this9","_this10","_this11","e","target","value","_this12","_this13","type","data-toggle","data-placement","onClick","onShowAddModal","map","format","completeTodo","name","dateBadge","onShowModal","getTodo","data-target","onArchive","toString","IncompleteTodo","defaultChecked","disabled","onUnarchive","deleteWarning","style","display","paddingRight","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","onChange","onChangeTitle","react_datepicker_min_default","selected","timeFormat","dateFormat","onChangeDate","onEdit","onAdd","class","onDelete","Footer","href","Header","countNotification","setInterval","length","aria-controls","aria-expanded","onShowNotification","aria-haspopup","notify","App","header","react_router","exact","path","render","routerProps","home","footer","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0OAAaA,EAAW,CACpBC,aAAc,8CCqDHC,cAjDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,UAAW,IAAIC,KACfC,QAASV,EAAKD,MAAMW,QACpBC,YAAa,IAAIF,MAEnBT,EAAKY,gBAAkBZ,EAAKY,gBAAgBC,KAArBZ,OAAAa,EAAA,EAAAb,CAAAD,IACvBA,EAAKe,kBAAoBf,EAAKe,kBAAkBF,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IARVA,iFAWCgB,GAChBb,KAAKc,SAAS,CACZT,UAAWQ,4CAICA,GACdb,KAAKc,SAAS,CACZP,QAASM,8CAIKR,EAAWE,GAI3B,OAHKQ,IAAOC,SAASX,KAAYA,EAAYU,IAAOV,IAC/CU,IAAOC,SAAST,KAAUA,EAAUQ,IAAOR,IAEzCA,EAAQU,KAAKZ,EAAW,yCAE1B,IAIDa,EAJCC,EAC0BnB,KAAKI,MAA5BC,EADHc,EACGd,UAAWE,EADdY,EACcZ,QAEba,EAAWpB,KAAKqB,kBAAkBhB,EAAWE,GAWnD,OARIW,EADAE,GAAY,EACA,eACLA,GAAY,GAAKA,GAAY,EACxB,gBACLA,EAAW,GAAKA,EAAW,GACtB,aAEA,gBAGRE,EAAAC,EAAAC,cAAA,QAAMN,UAAS,SAAAO,OAAWP,IAA1B,OAA2CI,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,SAAO,GAAE3B,KAAKJ,MAAMY,qBA7C/DoB,kDC0nBTC,cAnnBX,SAAAA,EAAYjC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,IACdhC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAA1B,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT0B,UAAU,EACVC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,GAAI,GACJC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,WAAW,EACXC,UAAU,EACVC,QAASzB,MACT0B,MAAO,IAfG5C,mFAqBdG,KAAK0C,8CAEE,IC/BqBC,ED+BrBC,EAAA5C,KC/BqB2C,EDgChB,SAAAE,GAAU,IACZC,EAAgBD,EAAhBC,KAAgBD,EAAVE,OAGZC,QAAQC,IAAI,SAEVH,GACFF,EAAK9B,SACD,SAACV,EAAOR,GACN,MAAO,CAAE6C,MAAOK,MCxC9BI,IAAMC,IAAI,4DACTC,KAAK,SAACC,GAIL,OAHmB,MAAfA,EAAIC,QACNX,EAAS,CAAEG,KAAMO,EAAIP,QAEhB,IAENS,MAAM,SAAAR,GACNJ,EAAS,CAAEI,MAAOA,sCDkDbb,EAAIC,EAAQE,EAAQD,EAAOG,EAAUD,EAAWE,GACpDxC,KAAKc,SACD,SAACV,EAAOR,GACN,MAAO,CACL4D,MAAOtB,EACPA,GAAIC,EACJE,OAAQA,EACRD,MAAOA,EACPE,UAAWA,EACXC,SAAUA,EACVC,QAAQA,0CAIPN,EAAIC,EAAQE,EAAQD,EAAOG,EAAUC,GAAQ,IAAAiB,EAAAzD,MEzE/C,SAAyBmC,EAAQQ,GAC5CO,IAAMQ,IAAN,4DAAAjC,OAAsEU,GAAU,CACxEG,WAAW,IAElBc,KAAK,SAACC,GAIL,OAHmB,MAAfA,EAAIC,QACNX,EAAS,CAAEG,KAAMO,EAAIP,QAEhB,IAENS,MAAM,SAAAR,GACNJ,EAAS,CAAEI,MAAOA,MF+DjBY,CAAgBxB,EAAQ,SAAAU,GAAU,IACtBC,EAAgBD,EAAhBC,KAKR,GALwBD,EAAVE,OAGZC,QAAQC,IAAI,SAEVH,EAAM,CACN,IAAIc,EAAW9D,OAAO+D,OAAO,GAAIJ,EAAKrD,MAAMqC,OAC5CmB,EAAS1B,GAAK,CACVA,GAAE,GAAAT,OAAIU,GACNE,OAAQA,EACRD,MAAOA,EACPE,WAAW,EACXC,SAAUA,EACVC,QAAQA,GAEZiB,EAAK3C,SACD,SAACV,EAAOR,GACN,MAAO,CACH6C,MAAOmB,KAGjB,IAAIE,EAAkBhE,OAAO+D,OAAO,GAAIpE,EAASC,cACjDoE,EAAgBC,KAAK,CACjB7B,GAAE,GAAAT,OAAIU,GACNE,OAAQA,EACRD,MAAOA,EACPE,WAAW,EACXC,SAAUA,EACVC,QAAQA,IAEZ/C,EAASC,aAAeoE,4CAIrB5B,EAAIC,EAAQE,EAAQD,EAAOG,EAAUC,GAAQ,IAAAwB,EAAAhE,MG7GjD,SAA2BmC,EAAQQ,GAC9CO,IAAMQ,IAAN,4DAAAjC,OAAsEU,GAAU,CAC5EG,WAAW,IAEdc,KAAK,SAACC,GAIL,OAHmB,MAAfA,EAAIC,QACNX,EAAS,CAAEG,KAAMO,EAAIP,QAEhB,IAENS,MAAM,SAAAR,GACNJ,EAAS,CAAEI,MAAOA,MHmGjBkB,CAAkB9B,EAAQ,SAAAU,GAAU,IACxBC,EAAgBD,EAAhBC,KAKR,GALwBD,EAAVE,OAGZC,QAAQC,IAAI,SAEVH,EAAM,CACN,IAAIc,EAAW9D,OAAO+D,OAAO,GAAIG,EAAK5D,MAAMqC,OAC5CmB,EAAS1B,GAAK,CACVA,GAAE,GAAAT,OAAIU,GACNE,OAAQA,EACRD,MAAOA,EACPE,WAAW,EACXC,SAAUA,EACVC,QAAQA,GAEZwB,EAAKlD,SACD,SAACV,EAAOR,GACN,MAAO,CACH6C,MAAOmB,KAGjB,IAAIE,EAAkBhE,OAAO+D,OAAO,GAAIpE,EAASC,cACjDoE,EAAgBC,KAAK,CACjB7B,GAAE,GAAAT,OAAIU,GACNE,OAAQA,EACRD,MAAOA,EACPE,WAAW,EACXC,SAAUA,EACVC,QAAQA,IAEZ/C,EAASC,aAAeoE,sCA6E3B3B,GAAO,IAAA+B,EAAAlE,KACZkD,IAAMlB,OAAN,4DAAAP,OAAyEU,IACxEiB,KAAK,SAAAe,GACF,IAAM1B,EAAQyB,EAAK9D,MAAMqC,MAAM2B,OAAO,SAAAC,GAAI,OAAIA,EAAKnC,KAAOC,IAC1D+B,EAAKpD,SACD,SAACV,EAAOR,GACN,MAAO,CAAE6C,aAGlBc,MAAM,SAAAR,GACPC,QAAQC,IAAIF,mCAGVX,EAAOI,GAAQ,IAAA8B,EAAAtE,KACjBgD,QAAQC,MACRC,IAAMqB,KAAK,2DAA4D,CACnEnC,MAAOpC,KAAKI,MAAMgC,MAClB/B,UAAW,IAAIC,KACfkC,QAASxC,KAAKI,MAAMoC,UAErBY,KAAK,SAAAe,GACJnB,QAAQC,IAAIkB,EAASrB,KAAKZ,IAE1B,IAAI0B,EAAW9D,OAAO+D,OAAO,GAAIS,EAAKlE,MAAMqC,OAC5CmB,EAASG,KAAK,CACV7B,GAAIiC,EAASrB,KAAKZ,GAClBG,OAAQ,GACRD,MAAOA,EACPE,WAAW,EACXC,UAAU,EACVC,QAASA,EACTnC,UAAW,IAAIC,OAEnBgE,EAAKxD,SACD,SAACV,EAAOR,GACN,MAAO,CAAE6C,MAAOmB,OAGvBL,MAAM,SAAUR,GACfC,QAAQC,IAAIF,sCAGZ,IAAAyB,EAAAxE,KACJkD,IAAMQ,IAAN,4DAAAjC,OAAsEzB,KAAKI,MAAM8B,IAAM,CACnFG,OAAQrC,KAAKI,MAAMiC,OACnBD,MAAOpC,KAAKI,MAAMgC,MAClBE,UAAWtC,KAAKI,MAAMkC,UACtBC,SAAUvC,KAAKI,MAAMmC,SACrBC,QAASxC,KAAKI,MAAMoC,UAEvBY,KAAK,SAAAe,GACF,IAAIP,EAAW9D,OAAO+D,OAAO,GAAIW,EAAKpE,MAAMqC,OAC5CmB,EAASY,EAAKpE,MAAMoD,OAAQ,CACxBtB,GAAE,GAAAT,OAAI+C,EAAKpE,MAAM8B,IACjBG,OAAQmC,EAAKpE,MAAMiC,OACnBD,MAAOoC,EAAKpE,MAAMgC,MAClBE,UAAWkC,EAAKpE,MAAMkC,UACtBC,SAAUiC,EAAKpE,MAAMmC,SACrBC,QAASgC,EAAKpE,MAAMoC,SAExBgC,EAAK1D,SACD,SAACV,EAAOR,GACN,MAAO,CAAE6C,MAAOmB,KAE1BZ,QAAQC,IAAIuB,EAAKpE,MAAMqC,SAEtBc,MAAM,SAAAR,GACPC,QAAQC,IAAIF,uCAGNb,EAAIC,EAAQE,EAAQD,EAAOE,EAAWE,GAAQ,IAAAiC,EAAAzE,KACpDkD,IAAMQ,IAAN,4DAAAjC,OAAsEU,GAAU,CAC5EI,UAAU,IAEba,KAAK,SAAAe,GACF,IAAIP,EAAW9D,OAAO+D,OAAO,GAAIY,EAAKrE,MAAMqC,OAC5CmB,EAAS1B,GAAK,CACVA,GAAE,GAAAT,OAAIU,GACNE,OAAQA,EACRD,MAAOA,EACPE,UAAWA,EACXC,UAAU,EACVC,QAAQA,GAEZiC,EAAK3D,SACD,SAACV,EAAOR,GACN,MAAO,CAAE6C,MAAOmB,KAE1B,IAAIE,EAAkBhE,OAAO+D,OAAO,GAAIpE,EAASC,cACjDoE,EAAgBC,KAAK,CACjB7B,GAAE,GAAAT,OAAIU,GACNE,OAAQA,EACRD,MAAOA,EACPE,UAAWA,EACXC,UAAU,EACVC,QAASA,IAEb/C,EAASC,aAAeoE,IAEvBP,MAAM,SAAAR,GACPC,QAAQC,IAAIF,yCAGJb,EAAIC,EAAQE,EAAQD,EAAOE,EAAWE,GAAQ,IAAAkC,EAAA1E,KACtDkD,IAAMQ,IAAN,4DAAAjC,OAAsEU,GAAU,CAC5EI,UAAU,IAEba,KAAK,SAAAe,GACF,IAAIP,EAAW9D,OAAO+D,OAAO,GAAIa,EAAKtE,MAAMqC,OAC5CmB,EAAS1B,GAAK,CACVA,GAAE,GAAAT,OAAIU,GACNE,OAAQA,EACRD,MAAOA,EACPE,UAAWA,EACXC,UAAU,EACVC,QAAQA,GAEZkC,EAAK5D,SACD,SAACV,EAAOR,GACN,MAAO,CAAE6C,MAAOmB,KAE1BZ,QAAQC,IAAIyB,EAAKtE,MAAMqC,SAEtBc,MAAM,SAAAR,GACPC,QAAQC,IAAIF,2CAGH,IAAA4B,EAAA3E,KACTA,KAAKc,SACD,SAACV,EAAOR,GACN,MAAO,CAAEmC,OAAQ4C,EAAKvE,MAAM2B,kDAGtB,IAAA6C,EAAA5E,KACZA,KAAKc,SACD,SAACV,EAAOR,GACN,MAAO,CAAEkC,UAAW8C,EAAKxE,MAAM0B,kDAG3B+C,GAKV7E,KAAKc,SAAU,CACXsB,MAAOyC,EAAEC,OAAOC,6CAGXlE,GACTb,KAAKc,SACD,SAACV,EAAOR,GACN,MAAO,CAAE4C,QAAS3B,2CAGdsB,GAAO,IAAA6C,EAAAhF,KACjBA,KAAKc,SACD,SAACV,EAAOR,GACN,MAAO,CACHoC,QAASgD,EAAK5E,MAAM4B,OACpBG,OAAQA,sCAIb,IAAA8C,EAAAjF,KACL,OACIsB,EAAAC,EAAAC,cAAA,OAAKN,UAAW,iBACRI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,YACXI,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKN,UAAW,OACZI,EAAAC,EAAAC,cAAA,OAAKN,UAAW,YAAhB,UAGAI,EAAAC,EAAAC,cAAA,OAAKN,UAAW,YAChBI,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAAShE,UAAU,iDAAiDiE,cAAY,QAAQC,iBAAe,MAAMhD,MAAM,WAChIiD,QAAS,WAEuBJ,EAAKK,mBAEThE,EAAAC,EAAAC,cAAA,KAAGN,UAAU,oBAIjDI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,mCACXI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,cACTlB,KAAKI,MAAMqC,MAAM8C,IAAI,SAAClB,EAAMnC,GACzB,IAAM1B,EAAcO,IAAOsD,EAAK7B,SAASgD,OAAO,2BAEhD,IAAsB,IAAnBnB,EAAK/B,YAAyC,IAAlB+B,EAAK9B,SAChC,OACIjB,EAAAC,EAAAC,cAAA,MAAIN,UAAU,mBACVI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,OACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACXI,EAAAC,EAAAC,cAAA,SAAO6D,QAAS,kBACZJ,EAAKQ,aAAavD,EAAImC,EAAKnC,GAAImC,EAAKhC,OAAQgC,EAAKjC,MAAOiC,EAAK9B,SAAU8B,EAAK7B,UAAU0C,KAAK,WAAWQ,KAAK,cAEnHpE,EAAAC,EAAAC,cAAA,OAAKN,UAAU,sBACfI,EAAAC,EAAAC,cAAA,SAAI6C,EAAKjC,MAAT,IAAgBd,EAAAC,EAAAC,cAACmE,EAAD,CAAWnF,YAAaA,EAAaH,UAAWgE,EAAKhE,UAAWE,QAAS8D,EAAK7B,YAE9FlB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,0BACXI,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAAShE,UAAU,2BAA2BmE,QAAS,WAE5DJ,EAAKW,cACLX,EAAKY,QAAQ3D,EAAImC,EAAKnC,GAAImC,EAAKhC,OAAQgC,EAAKjC,MAAOiC,EAAK9B,SAAU8B,EAAK/B,UAAW9B,IAEvF2E,cAAY,QAAQW,cAAY,iBAAgBxE,EAAAC,EAAAC,cAAA,KAAGN,UAAU,gBAChEI,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,kBAAMJ,EAAKc,UAAU7D,EAAImC,EAAKnC,GAAImC,EAAKhC,OAAQgC,EAAKjC,MAAOiC,EAAK/B,UAAW+B,EAAK7B,UAAU0C,KAAK,SAASC,cAAY,UAAUC,iBAAe,MAAMhD,MAAM,eAAelB,UAAU,+BAA8BI,EAAAC,EAAAC,cAAA,KAAGN,UAAU,4BAY9QI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,YACnBI,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,2CACXI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,cACTlB,KAAKI,MAAMqC,MAAM8C,IAAI,SAAClB,EAAMnC,GACzB,IAAM1B,EAAc,IAAIF,KAAK+D,EAAK7B,SAASwD,WAC3C,IAAsB,IAAnB3B,EAAK/B,YAAwC,IAAlB+B,EAAK9B,SAC/B,OACIjB,EAAAC,EAAAC,cAAA,MAAIN,UAAU,mBACVI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,OACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACfI,EAAAC,EAAAC,cAAA,SAAO6D,QAAS,kBACJJ,EAAKgB,eAAe/D,EAAImC,EAAKnC,GAAImC,EAAKhC,OAAQgC,EAAKjC,MAAOiC,EAAK9B,SAAU8B,EAAK7B,UAAU0C,KAAK,WAAWC,cAAY,UAAUC,iBAAe,MAAMhD,MAAM,WAAWsD,KAAK,aAAaQ,gBAAgB,KAElN5E,EAAAC,EAAAC,cAAA,OAAKN,UAAU,sBACfI,EAAAC,EAAAC,cAAA,SAAI6C,EAAKjC,MAAT,IAAgBd,EAAAC,EAAAC,cAACmE,EAAD,CAAWnF,YAAaA,EAAaH,UAAWgE,EAAKhE,UAAWE,QAAS8D,EAAK7B,YAE9FlB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,0BACfI,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAAShE,UAAU,2BAA2BmE,QAAS,WAEpDJ,EAAKW,cACLX,EAAKY,QAAQ3D,EAAImC,EAAKnC,GAAImC,EAAKhC,OAAQgC,EAAKjC,MAAOiC,EAAK9B,SAAU8B,EAAK/B,UAAW9B,IAEvF2E,cAAY,QAAQW,cAAY,gBAAgBK,UAAQ,GAAC7E,EAAAC,EAAAC,cAAA,KAAGN,UAAU,gBACjFI,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,kBAAMJ,EAAKc,UAAU7D,EAAImC,EAAKnC,GAAImC,EAAKhC,OAAQgC,EAAKjC,MAAOiC,EAAK/B,UAAW+B,EAAK7B,UAAU0C,KAAK,SAASC,cAAY,UAAUC,iBAAe,MAAMhD,MAAM,eAAelB,UAAU,+BAA8BI,EAAAC,EAAAC,cAAA,KAAGN,UAAU,4BAWtQI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,YACXI,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,6CACXI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,cACblB,KAAKI,MAAMqC,MAAM8C,IAAI,SAAClB,EAAMnC,GACzB,IAAM1B,EAAc,IAAIF,KAAK+D,EAAK7B,SAASwD,WAC3C,IAAqB,IAAlB3B,EAAK9B,SACJ,OACIjB,EAAAC,EAAAC,cAAA,MAAIN,UAAU,mBACVI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,OACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACfI,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,kBAAMJ,EAAKmB,YAAYlE,EAAImC,EAAKnC,GAAImC,EAAKhC,OAAQgC,EAAKjC,MAAOiC,EAAK/B,UAAW+B,EAAK7B,UAAU0C,KAAK,SAASC,cAAY,UAAUC,iBAAe,MAAMhD,MAAM,iBAAiBlB,UAAU,iCAAgCI,EAAAC,EAAAC,cAAA,KAAGN,UAAU,sBAEpPI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,sBACfI,EAAAC,EAAAC,cAAA,SAAI6C,EAAKjC,MAAT,IAAgBd,EAAAC,EAAAC,cAACmE,EAAD,CAAWnF,YAAaA,EAAaH,UAAWgE,EAAKhE,UAAWE,QAAS8D,EAAK7B,YAE9FlB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,0BACfI,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAAShE,UAAU,2BAA2BmE,QAAS,WAExDJ,EAAKW,cACLX,EAAKY,QAAQ3D,EAAImC,EAAKnC,GAAImC,EAAKhC,OAAQgC,EAAKjC,MAAOiC,EAAK9B,SAAU8B,EAAK/B,UAAW9B,IAEvF2E,cAAY,QAAQW,cAAY,gBAAgBK,UAAQ,GAAC7E,EAAAC,EAAAC,cAAA,KAAGN,UAAU,gBAC7EI,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAASG,QAAS,WAE3BJ,EAAKoB,cAAchC,EAAKnC,KACxBhB,UAAU,yBAAyBiE,cAAY,QAAQW,cAAY,kBAAkBxE,EAAAC,EAAAC,cAAA,KAAGN,UAAU,8BAWtII,EAAAC,EAAAC,cAAA,OAAKN,UAAS,cAAAO,OAAgBzB,KAAKI,MAAM2B,MAAQ,OAAS,QAAUG,GAAG,WAAWoE,MAAO,CAACC,QAAO,GAAA9E,OAAKzB,KAAKI,MAAM2B,MAAQ,QAAU,IAAMyE,aAAY,GAAA/E,OAAMzB,KAAKI,MAAM2B,MAAQ,OAAS,KAAQ0E,SAAS,KAAKC,KAAK,SAASC,kBAAgB,oBAAoBC,cAAY,QAC3QtF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eAAewF,KAAK,YAC/BpF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,iBACfI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACXI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,cAAcgB,GAAG,qBAA/B,aACAZ,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAAShE,UAAU,QAAQ2F,eAAa,QAAQC,aAAW,SACxExF,EAAAC,EAAAC,cAAA,QAAMoF,cAAY,QAAlB,UAGJtF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,cACXI,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOuF,SAAU/G,KAAKgH,cAActG,KAAKV,MAAOkB,UAAW,eAAgBgE,KAAK,OAAOQ,KAAK,QAAQX,MAAO/E,KAAKI,MAAMgC,QACtHd,EAAAC,EAAAC,cAAA,yBACIF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,sBACXI,EAAAC,EAAAC,cAACyF,EAAA1F,EAAD,CACIL,UAAW,eACXgG,SAAU,IAAI5G,KAAKN,KAAKI,MAAMoC,SAC9B2E,WAAW,QACXC,WAAW,uBACXL,SAAU/G,KAAKqH,aAAa3G,KAAKV,QAErCsB,EAAAC,EAAAC,cAAA,QAAMN,UAAU,mBAAmBgB,GAAG,gBAClCZ,EAAAC,EAAAC,cAAA,KAAGN,UAAW,uBAKlCI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACXI,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,WACjBJ,EAAKW,cACLX,EAAKnE,SACD,SAACV,EAAOR,GACN,MAAO,CAAEwC,MAAO,OAEvB8C,KAAK,SAAShE,UAAU,oBAAoB2F,eAAa,SANxD,SAOAvF,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,WACbJ,EAAKqC,SACLrC,EAAKW,eACPV,KAAK,SAAShE,UAAU,mBAH1B,oBASRI,EAAAC,EAAAC,cAAA,OAAKN,UAAS,cAAAO,OAAgBzB,KAAKI,MAAM0B,SAAW,OAAS,QAAUI,GAAG,eAAeoE,MAAO,CAACC,QAAO,GAAA9E,OAAKzB,KAAKI,MAAM0B,SAAW,QAAU,IAAM0E,aAAY,GAAA/E,OAAMzB,KAAKI,MAAM0B,SAAW,OAAS,KAAQ2E,SAAS,KAAKC,KAAK,SAASC,kBAAgB,oBAAoBC,cAAY,QACxRtF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eAAewF,KAAK,YAC/BpF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,iBACfI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACXI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,cAAcgB,GAAG,qBAA/B,YACAZ,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAAShE,UAAU,QAAQ2F,eAAa,QAAQC,aAAW,SACxExF,EAAAC,EAAAC,cAAA,QAAMoF,cAAY,QAAlB,UAGJtF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,cACXI,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOuF,SAAU/G,KAAKgH,cAActG,KAAKV,MAAOkB,UAAW,eAAgBgE,KAAK,OAAOQ,KAAK,QAAQX,MAAO/E,KAAKI,MAAMgC,QACtHd,EAAAC,EAAAC,cAAA,yBACIF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,sBACXI,EAAAC,EAAAC,cAACyF,EAAA1F,EAAD,CACIL,UAAW,eACXgG,SAAU,IAAI5G,KACd6G,WAAW,QACXC,WAAW,uBACXL,SAAU/G,KAAKqH,aAAa3G,KAAKV,QAErCsB,EAAAC,EAAAC,cAAA,QAAMN,UAAU,mBAAmBgB,GAAG,gBAClCZ,EAAAC,EAAAC,cAAA,KAAGN,UAAW,uBAKlCI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACXI,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,WACbJ,EAAKK,iBACLL,EAAKnE,SACD,SAACV,EAAOR,GACN,MAAO,CAAEwC,MAAO,OAEvB8C,KAAK,SAAShE,UAAU,oBAAoB2F,eAAa,SAN5D,SAOAvF,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,WACbJ,EAAKsC,MAAMtC,EAAK7E,MAAMgC,MAAO6C,EAAK7E,MAAMoC,SACxCyC,EAAKK,iBACLL,EAAKnE,SACD,SAACV,EAAOR,GACN,MAAO,CAAEwC,MAAO,OAEtB8C,KAAK,SAAShE,UAAU,mBAP5B,oBAaRI,EAAAC,EAAAC,cAAA,OAAKN,UAAS,2BAAAO,OAA6BzB,KAAKI,MAAM4B,OAAS,OAAS,QAAUE,GAAG,gBAAgBoE,MAAO,CAACC,QAAO,GAAA9E,OAAKzB,KAAKI,MAAM4B,OAAS,QAAU,IAAMwE,aAAY,GAAA/E,OAAMzB,KAAKI,MAAM4B,OAAS,OAAS,KAAQyE,SAAS,KAAKC,KAAK,SAASC,kBAAgB,oBAAoBC,cAAY,QAChStF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eAAewF,KAAK,YAC/BpF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,iBACfI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACXI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,cAAcgB,GAAG,qBAA/B,qCACAZ,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAAShE,UAAU,QAAQ2F,eAAa,QAAQC,aAAW,SACxExF,EAAAC,EAAAC,cAAA,QAAMoF,cAAY,QAAlB,UAGJtF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,cACXI,EAAAC,EAAAC,cAAA,KAAGgG,MAAM,gCACTlG,EAAAC,EAAAC,cAAA,sEAEJF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,gBACXI,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,WACbJ,EAAKoB,iBACNnB,KAAK,SAAShE,UAAU,oBAAoB2F,eAAa,SAF5D,SAGAvF,EAAAC,EAAAC,cAAA,UAAQ6D,QAAS,WACbJ,EAAKwC,SAASxC,EAAK7E,MAAM+B,QACzB8C,EAAKoB,gBACLpB,EAAKnE,SACD,SAACV,EAAOR,GACN,MAAO,CAAEwC,MAAO,OAEtB8C,KAAK,SAAShE,UAAU,mBAP5B,sBAnmBTU,aIOJ8F,mLAbP,OACQpG,EAAAC,EAAAC,cAAA,UAAQN,UAAU,cACdI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,aACXI,EAAAC,EAAAC,cAAA,KAAGN,UAAU,eACbI,EAAAC,EAAAC,cAAA,KAAGmG,KAAK,KAAR,gBAEArG,EAAAC,EAAAC,cAAA,+EARHI,aCqENgG,cApEX,SAAAA,EAAYhI,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4H,IACd/H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8H,GAAAzH,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT6B,UAAU,EACV4F,kBAAmB,IALThI,mFAQE,IAAA+C,EAAA5C,KAChB8H,YAAY,kBAAMlF,EAAK9B,SAAS,CAAE+G,kBAAmBpI,EAASC,aAAaqI,UAAU,kDAErE,IAAAtE,EAAAzD,KAChBA,KAAKc,SACD,SAACV,EAAOR,GACN,MAAO,CAAEqC,UAAWwB,EAAKrD,MAAM6B,6CAIrC,OACIX,EAAAC,EAAAC,cAAA,OAAKN,UAAW,WACZI,EAAAC,EAAAC,cAAA,OAAKN,UAAW,aAChBI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,2BACXI,EAAAC,EAAAC,cAAA,KAAGN,UAAU,eAAeyG,KAAK,KAAjC,oBACArG,EAAAC,EAAAC,cAAA,UAAQN,UAAU,iBAAiBgE,KAAK,SAASC,cAAY,WAAWW,cAAY,oBAAoBkC,gBAAc,mBAAmBC,gBAAc,QAAQnB,aAAW,qBAC1KxF,EAAAC,EAAAC,cAAA,QAAMN,UAAU,yBAGhBI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,2BAA2BgB,GAAG,oBAC7CZ,EAAAC,EAAAC,cAAA,MAAIN,UAAU,uBAmBdI,EAAAC,EAAAC,cAAA,OAAKN,UAAS,YAAAO,OAAczB,KAAKI,MAAM6B,SAAW,OAAS,SAC/CX,EAAAC,EAAAC,cAAA,KAAG6D,QAASrF,KAAKkI,mBAAmBxH,KAAKV,MAAOkB,UAAU,uBAAuBwF,KAAK,SAASxE,GAAG,mBAAmBiD,cAAY,WAAWgD,gBAAc,OAAOF,gBAAc,SAC3K3G,EAAAC,EAAAC,cAAA,KAAGN,UAAU,gBADjB,IACoCI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,qBAAqBlB,KAAKI,MAAMyH,oBAGpFvG,EAAAC,EAAAC,cAAA,OAAKN,UAAS,iBAAAO,OAAmBzB,KAAKI,MAAM6B,SAAW,OAAS,QAAU0E,kBAAgB,oBACzFlH,EAASC,aAAa6F,IAAI,SAAC6C,EAAQlG,GAChC,OACIZ,EAAAC,EAAAC,cAAA,KAAGN,UAAU,gBAAgByG,KAAK,KAAKS,EAAOhG,sBAxDjER,kCCsCNyG,MAhCf,WACE,OACE/G,EAAAC,EAAAC,cAAA,OAAKN,UAAU,OACnBI,EAAAC,EAAAC,cAAC8G,EAAD,MACAhH,EAAAC,EAAAC,cAAA,QAAMkF,KAAK,QAETpF,EAAAC,EAAAC,cAAA,WAASN,UAAU,wCACjBI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,aACbI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,qBAAd,aACAI,EAAAC,EAAAC,cAAA,KAAGN,UAAU,mBAAb,gIACAI,EAAAC,EAAAC,cAAA,KAAGN,UAAU,mBAAb,oMAEAI,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGmG,KAAK,IAAIzG,UAAU,uBAAtB,UACAI,EAAAC,EAAAC,cAAA,KAAGmG,KAAK,IAAIzG,UAAU,yBAAtB,oBAKNI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACbI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,aACfI,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,IAAOC,OAAS,SAACC,GAAD,OAAiBrH,EAAAC,EAAAC,cAAEoH,EAAF,CAAOD,YAAaA,UAM1ErH,EAAAC,EAAAC,cAACqH,EAAD,QCvBoBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECZNC,IAAST,OAAOpH,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAQC,SAAUC,sBAAwBhI,EAAAC,EAAAC,cAAC+H,EAAD,OAAkBC,SAASC,eAAe,SD2H9F,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxG,KAAK,SAAAyG,GACjCA,EAAaC","file":"static/js/main.3bd1b810.chunk.js","sourcesContent":["export const settings = {\r\n    notification: []\r\n}\r\n  ","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\nimport moment from \"moment\";\r\n\r\nclass DateBadge extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          startDate: new Date(),\r\n          endDate: this.props.endDate,\r\n          currentDate: new Date()\r\n        };\r\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\r\n        this.handleChangeStart = this.handleChangeStart.bind(this);\r\n      }\r\n    \r\n      handleChangeStart(date) {\r\n        this.setState({\r\n          startDate: date\r\n        });\r\n      }\r\n    \r\n      handleChangeEnd(date) {\r\n        this.setState({\r\n          endDate: date\r\n        });\r\n      }\r\n    \r\n      calculateDaysLeft(startDate, endDate) {\r\n        if (!moment.isMoment(startDate)) startDate = moment(startDate);\r\n        if (!moment.isMoment(endDate)) endDate = moment(endDate);\r\n    \r\n        return endDate.diff(startDate, \"days\");\r\n      }\r\n    render() {\r\n        const { startDate, endDate } = this.state;\r\n\r\n        const daysLeft = this.calculateDaysLeft(startDate, endDate);\r\n        let className;\r\n        if (daysLeft <= 1){\r\n            className = 'badge-danger';\r\n        } else if (daysLeft >= 2 && daysLeft <= 5){\r\n            className = 'badge-warning';\r\n        } else if (daysLeft > 5 && daysLeft < 11 ){\r\n            className = 'badge-info';\r\n        } else {\r\n            className = 'badge-primary';\r\n        }\r\n        return (\r\n                <span className={`badge ${className}`}>Due <Moment fromNow>{this.props.currentDate}</Moment></span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DateBadge;","import React, { Component } from 'react';\r\nimport { settings } from './../settings';\r\nimport DateBadge from './../components/dateBadge'\r\nimport Datepicker from 'react-datepicker'\r\nimport moment from 'moment'\r\nimport GetTodosApi from '../api/GetTodosApi'\r\nimport CompleteTodoApi from '../api/CompleteTodoApi'\r\nimport IncompleteTodoApi from '../api/IncompleteTodoApi'\r\nimport axios from 'axios';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            addModal: false,\r\n            modal: false,\r\n            delete: false,\r\n            dropdown: false,\r\n            id: '',\r\n            todoId: '', \r\n            title: '',\r\n            userId: '',\r\n            completed: false,\r\n            archived: false,\r\n            dueDate: moment(),\r\n            todos: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        // this.getTodos();\r\n        this.getTodos();\r\n    }\r\n    getTodos() {\r\n        GetTodosApi(result => {\r\n          const { data, error } = result;\r\n          if (error) {\r\n            // Handle error\r\n            console.log('error')\r\n          }\r\n          if (data) {\r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: data };\r\n            });\r\n          }\r\n      });\r\n    }\r\n    // getTodos() {\r\n    //       axios.get('https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos')\r\n    //       .then(response => {\r\n    //         this.setState(\r\n    //             (state, props) => {\r\n    //               return { todos: response.data };\r\n    //         });\r\n    //       })\r\n    //       .catch(error => {\r\n    //         console.log(error);\r\n    //       })\r\n    // }\r\n\r\n    getTodo(id, todoId, userId, title, archived, completed, dueDate){\r\n        this.setState(\r\n            (state, props) => {\r\n              return {\r\n                arrId: id, \r\n                id: todoId,\r\n                userId: userId,\r\n                title: title,\r\n                completed: completed,\r\n                archived: archived,\r\n                dueDate:dueDate,\r\n            };\r\n        });\r\n    }\r\n    completeTodo(id, todoId, userId, title, archived, dueDate){\r\n        CompleteTodoApi(todoId, result => {\r\n            const { data, error } = result;\r\n            if (error) {\r\n              // Handle error\r\n              console.log('error')\r\n            }\r\n            if (data) {\r\n                let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n                newArray[id]=({\r\n                    id:`${todoId}`,\r\n                    userId: userId,\r\n                    title: title,\r\n                    completed: true,\r\n                    archived: archived,\r\n                    dueDate:dueDate,\r\n                }); \r\n                this.setState(\r\n                    (state, props) => {\r\n                      return { \r\n                          todos: newArray\r\n                    };\r\n                });\r\n                let newNotification = Object.assign([], settings.notification);\r\n                newNotification.push({\r\n                    id:`${todoId}`,\r\n                    userId: userId,\r\n                    title: title,\r\n                    completed: true,\r\n                    archived: archived,\r\n                    dueDate:dueDate,\r\n                }); \r\n                settings.notification = newNotification;\r\n            }\r\n        });\r\n    }\r\n    IncompleteTodo(id, todoId, userId, title, archived, dueDate){\r\n        IncompleteTodoApi(todoId, result => {\r\n            const { data, error } = result;\r\n            if (error) {\r\n              // Handle error\r\n              console.log('error')\r\n            }\r\n            if (data) {\r\n                let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n                newArray[id]=({\r\n                    id:`${todoId}`,\r\n                    userId: userId,\r\n                    title: title,\r\n                    completed: false,\r\n                    archived: archived,\r\n                    dueDate:dueDate,\r\n                }); \r\n                this.setState(\r\n                    (state, props) => {\r\n                      return { \r\n                          todos: newArray\r\n                    };\r\n                });\r\n                let newNotification = Object.assign([], settings.notification);\r\n                newNotification.push({\r\n                    id:`${todoId}`,\r\n                    userId: userId,\r\n                    title: title,\r\n                    completed: false,\r\n                    archived: archived,\r\n                    dueDate:dueDate,\r\n                }); \r\n                settings.notification = newNotification;\r\n            }\r\n        });\r\n    }\r\n    // onComplete(id, todoId, userId, title, archived, dueDate){\r\n    //     axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n    //         completed: true\r\n    //       })\r\n    //     .then(response => {\r\n    //         let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n    //         newArray[id]=({\r\n    //             id:`${todoId}`,\r\n    //             userId: userId,\r\n    //             title: title,\r\n    //             completed: true,\r\n    //             archived: archived,\r\n    //             dueDate:dueDate,\r\n    //         }); \r\n    //         this.setState(\r\n    //             (state, props) => {\r\n    //               return { \r\n    //                   todos: newArray\r\n    //             };\r\n    //         });\r\n    //     let newNotification = Object.assign([], settings.notification);\r\n    //     newNotification.push({\r\n    //         id:`${todoId}`,\r\n    //         userId: userId,\r\n    //         title: title,\r\n    //         completed: true,\r\n    //         archived: archived,\r\n    //         dueDate:dueDate,\r\n    //     }); \r\n    //     settings.notification = newNotification;\r\n    //     console.log(newNotification)\r\n    //     })\r\n    //     .catch(error => {\r\n    //     console.log(error);\r\n    //     })\r\n    // }\r\n\r\n    // inComplete(id, todoId, userId, title, archived, dueDate){\r\n    //     axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n    //         completed: false\r\n    //       })\r\n    //     .then(response => {\r\n    //         let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n    //         newArray[id]=({\r\n    //             id:`${todoId}`,\r\n    //             userId: userId,\r\n    //             title: title,\r\n    //             completed: false,\r\n    //             archived: archived,\r\n    //             dueDate:dueDate,\r\n    //         }); \r\n    //         this.setState(\r\n    //             (state, props) => {\r\n    //               return { \r\n    //                   todos: newArray\r\n    //             };\r\n    //         });\r\n    //     let newNotification = Object.assign([], settings.notification);\r\n    //     newNotification.push({\r\n    //         id:`${todoId}`,\r\n    //         userId: userId,\r\n    //         title: title,\r\n    //         completed: true,\r\n    //         archived: archived,\r\n    //         dueDate:dueDate,\r\n    //     }); \r\n    //     settings.notification = newNotification;\r\n    //     console.log(settings.notification.length)\r\n    //     })\r\n    //     .catch(error => {\r\n    //     console.log(error);\r\n    //     })\r\n    // }\r\n    onDelete(todoId){\r\n        axios.delete(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`)\r\n        .then(response => {\r\n            const todos = this.state.todos.filter(todo => todo.id !== todoId)\r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos };\r\n            });\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onAdd(title, dueDate){\r\n        console.log()\r\n        axios.post('https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos', {\r\n            title: this.state.title,\r\n            startDate: new Date(),\r\n            dueDate: this.state.dueDate\r\n          })\r\n          .then(response => {\r\n            console.log(response.data.id);\r\n\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray.push({\r\n                id: response.data.id,\r\n                userId: 26,\r\n                title: title,\r\n                completed: false,\r\n                archived: false,\r\n                dueDate: dueDate,\r\n                startDate: new Date()\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: newArray };\r\n            });\r\n            })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n    onEdit(){\r\n        axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${this.state.id}`, {\r\n            userId: this.state.userId,\r\n            title: this.state.title,\r\n            completed: this.state.completed,\r\n            archived: this.state.archived,\r\n            dueDate: this.state.dueDate\r\n          })\r\n        .then(response => {\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray[this.state.arrId]=({\r\n                id:`${this.state.id}`,\r\n                userId: this.state.userId,\r\n                title: this.state.title,\r\n                completed: this.state.completed,\r\n                archived: this.state.archived,\r\n                dueDate: this.state.dueDate,\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: newArray };\r\n            });\r\n        console.log(this.state.todos)\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onArchive(id, todoId, userId, title, completed, dueDate){\r\n        axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n            archived: true\r\n          })\r\n        .then(response => {\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray[id]=({\r\n                id:`${todoId}`,\r\n                userId: userId,\r\n                title: title,\r\n                completed: completed,\r\n                archived: true,\r\n                dueDate:dueDate,\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: newArray };\r\n            });\r\n        let newNotification = Object.assign([], settings.notification);\r\n        newNotification.push({\r\n            id:`${todoId}`,\r\n            userId: userId,\r\n            title: title,\r\n            completed: completed,\r\n            archived: true,\r\n            dueDate: dueDate,\r\n        }); \r\n        settings.notification = newNotification;\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onUnarchive(id, todoId, userId, title, completed, dueDate){\r\n        axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n            archived: false\r\n          })\r\n        .then(response => {\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray[id]=({\r\n                id:`${todoId}`,\r\n                userId: userId,\r\n                title: title,\r\n                completed: completed,\r\n                archived: false,\r\n                dueDate:dueDate,\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: newArray };\r\n            });\r\n        console.log(this.state.todos)\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onShowModal(){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { modal: !this.state.modal };\r\n        });\r\n    }\r\n    onShowAddModal(){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { addModal: !this.state.addModal };\r\n        });\r\n    }\r\n    onChangeTitle(e){\r\n        // this.setState(\r\n        //     (state, props) => {\r\n        //       return { title: e.target.value };\r\n        // });\r\n        this.setState(({\r\n            title: e.target.value\r\n        }));  \r\n    }\r\n    onChangeDate(date){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { dueDate: date };\r\n        });\r\n    }\r\n    deleteWarning(todoId){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { \r\n                  delete: !this.state.delete, \r\n                  todoId: todoId\r\n            };\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={'row todo-page'}>\r\n                    <div className=\"col-md-4\">\r\n                        <h3>\r\n                            <div className={'row'}>\r\n                                <div className={'col-md-6'}>\r\n                                    Todo's \r\n                                </div>\r\n                                <div className={'col-md-6'}>\r\n                                <button type=\"button\" className=\"btn btn-sm btn-primary btn-archive float-right\" data-toggle=\"modal\" data-placement=\"top\" title=\"Add Todo\"\r\n                                onClick={() => \r\n                                                            {\r\n                                                                this.onShowAddModal()\r\n                                                            }\r\n                                                        }  ><i className=\"fas fa-plus\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </h3>\r\n                        <div className=\"card mb-4 shadow-sm border-info\">\r\n                            <ul className=\"list-group\">\r\n                                {this.state.todos.map((todo, id) => {\r\n                                    const currentDate = moment(todo.dueDate).format('MMMM DD YYYY, h:mm:ss a');\r\n                                   \r\n                                    if(todo.completed === false && todo.archived === false){\r\n                                        return(\r\n                                            <li className=\"list-group-item\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col col-lg-1\">\r\n                                                        <input onClick={() => \r\n                                                            this.completeTodo(id, todo.id, todo.userId, todo.title, todo.archived, todo.dueDate)} type=\"checkbox\" name=\"complete\"/>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-8 todo-text\">\r\n                                                    <p>{todo.title} <DateBadge currentDate={currentDate} startDate={todo.startDate} endDate={todo.dueDate}/></p>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-3 todo-edit-btn\">\r\n                                                        <button type=\"button\" className=\"btn btn-primary btn-edit\" onClick={() => \r\n                                                            {\r\n                                                                this.onShowModal()\r\n                                                                this.getTodo(id, todo.id, todo.userId, todo.title, todo.archived, todo.completed, currentDate)\r\n                                                            }\r\n                                                        }  data-toggle=\"modal\" data-target=\"#exampleModal\"><i className=\"fas fa-pen\"></i></button>\r\n                                                        <button onClick={() => this.onArchive(id, todo.id, todo.userId, todo.title, todo.completed, todo.dueDate)} type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Archive Todo\" className=\"btn btn-primary btn-archive\"><i className=\"fas fa-archive\"></i></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                })}\r\n\r\n                            </ul>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                    <h3>Done</h3>\r\n                    <div className=\"card mb-4 shadow-sm border-success done\">\r\n                        <ul className=\"list-group\">\r\n                            {this.state.todos.map((todo, id) => {\r\n                                const currentDate = new Date(todo.dueDate).toString()\r\n                                if(todo.completed === true && todo.archived === false){\r\n                                    return(\r\n                                        <li className=\"list-group-item\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col col-lg-1\">\r\n                                                <input onClick={() => \r\n                                                            this.IncompleteTodo(id, todo.id, todo.userId, todo.title, todo.archived, todo.dueDate)} type=\"checkbox\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Not Done\" name=\"incomplete\" defaultChecked={true}/>\r\n                                                </div>\r\n                                                <div className=\"col-lg-8 todo-text\">\r\n                                                <p>{todo.title} <DateBadge currentDate={currentDate} startDate={todo.startDate} endDate={todo.dueDate}/></p>\r\n                                                </div>\r\n                                                <div className=\"col-lg-3 todo-edit-btn\">\r\n                                                <button type=\"button\" className=\"btn btn-primary btn-edit\" onClick={() => \r\n                                                            {\r\n                                                                this.onShowModal()\r\n                                                                this.getTodo(id, todo.id, todo.userId, todo.title, todo.archived, todo.completed, currentDate)\r\n                                                            }\r\n                                                        }  data-toggle=\"modal\" data-target=\"#exampleModal\" disabled><i className=\"fas fa-pen\"></i></button>\r\n                                                <button onClick={() => this.onArchive(id, todo.id, todo.userId, todo.title, todo.completed, todo.dueDate)} type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Archive Todo\" className=\"btn btn-primary btn-archive\"><i className=\"fas fa-archive\"></i></button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <h3>Archive</h3>\r\n                            <div className=\"card mb-4 shadow-sm border-danger archive\">\r\n                                <ul className=\"list-group\">\r\n                                {this.state.todos.map((todo, id) => {\r\n                                    const currentDate = new Date(todo.dueDate).toString()\r\n                                    if(todo.archived === true){\r\n                                        return(\r\n                                            <li className=\"list-group-item\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col col-lg-1\">\r\n                                                    <button onClick={() => this.onUnarchive(id, todo.id, todo.userId, todo.title, todo.completed, todo.dueDate)} type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unarchive Todo\" className=\"btn btn-primary btn-unarchive\"><i className=\"fas fa-box-open\"></i></button>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-8 todo-text\">\r\n                                                    <p>{todo.title} <DateBadge currentDate={currentDate} startDate={todo.startDate} endDate={todo.dueDate}/></p>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-3 todo-edit-btn\">\r\n                                                    <button type=\"button\" className=\"btn btn-primary btn-edit\" onClick={() => \r\n                                                            {\r\n                                                                this.onShowModal()\r\n                                                                this.getTodo(id, todo.id, todo.userId, todo.title, todo.archived, todo.completed, currentDate)\r\n                                                            }\r\n                                                        }  data-toggle=\"modal\" data-target=\"#exampleModal\" disabled><i className=\"fas fa-pen\"></i></button>\r\n                                                    <button type=\"button\" onClick={() => {\r\n                                                        // this.onDelete(id, todo.id)\r\n                                                        this.deleteWarning(todo.id)\r\n                                                    }}  className=\"btn btn-delete-forever\" data-toggle=\"modal\" data-target=\"#deleteWarning\" ><i className=\"fas fa-trash-alt\"></i></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    } \r\n                                })}\r\n                                </ul>\r\n                            </div>\r\n                    </div>\r\n                    {/* Edit Modal */}\r\n                    <div className={`modal fade ${this.state.modal ? 'show' : 'hide'}`} id=\"addModal\" style={{display: `${this.state.modal ? 'block' : ''}`, paddingRight:  `${this.state.modal ? '17px' : ''}`}}  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Todo</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <label>Title</label>\r\n                            <input onChange={this.onChangeTitle.bind(this)} className={'form-control'} type=\"text\" name=\"title\" value={this.state.title}/>\r\n                            <label>Due Date</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-append\">\r\n                                        <Datepicker\r\n                                            className={'form-control'}\r\n                                            selected={new Date(this.state.dueDate)}\r\n                                            timeFormat=\"HH:mm\"\r\n                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                            onChange={this.onChangeDate.bind(this)}\r\n                                        />\r\n                                        <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                            <i className={'fa fa-calendar'}></i>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={() => {\r\n                            this.onShowModal()\r\n                            this.setState(\r\n                                (state, props) => {\r\n                                  return { title: '' };\r\n                            })\r\n                        }} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button onClick={() => {\r\n                                this.onEdit()\r\n                                this.onShowModal()\r\n                            }}type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div> \r\n                    {/* Add Modal */}\r\n                    <div className={`modal fade ${this.state.addModal ? 'show' : 'hide'}`} id=\"exampleModal\" style={{display: `${this.state.addModal ? 'block' : ''}`, paddingRight:  `${this.state.addModal ? '17px' : ''}`}}  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Todo</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <label>Title</label>\r\n                            <input onChange={this.onChangeTitle.bind(this)} className={'form-control'} type=\"text\" name=\"title\" value={this.state.title}/>\r\n                            <label>Due Date</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-append\">\r\n                                        <Datepicker\r\n                                            className={'form-control'}\r\n                                            selected={new Date()}\r\n                                            timeFormat=\"HH:mm\"\r\n                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                            onChange={this.onChangeDate.bind(this)}\r\n                                        />\r\n                                        <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                            <i className={'fa fa-calendar'}></i>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={() => {\r\n                                this.onShowAddModal()\r\n                                this.setState(\r\n                                    (state, props) => {\r\n                                      return { title: '' };\r\n                                });\r\n                            }} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button onClick={() => {\r\n                                this.onAdd(this.state.title, this.state.dueDate)\r\n                                this.onShowAddModal()\r\n                                this.setState(\r\n                                    (state, props) => {\r\n                                      return { title: '' };\r\n                                })\r\n                            }}  type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div> \r\n                    {/* Delete Modal */}\r\n                    <div className={`modal modal-delete fade ${this.state.delete ? 'show' : 'hide'}`} id=\"deleteWarning\" style={{display: `${this.state.delete ? 'block' : ''}`, paddingRight:  `${this.state.delete ? '17px' : ''}`}}  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Are you sure you want to do this?</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <i class=\"fas fa-exclamation-triangle\"></i>\r\n                            <h5>Deleting this will be permanently gone in your database</h5>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={() => {\r\n                                this.deleteWarning()\r\n                            }} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button onClick={() => {\r\n                                this.onDelete(this.state.todoId)\r\n                                this.deleteWarning()\r\n                                this.setState(\r\n                                    (state, props) => {\r\n                                      return { title: '' };\r\n                                })\r\n                            }}  type=\"button\" className=\"btn btn-primary\">Delete</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function GetTodosApi(callback) {\r\n    axios.get('https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos')\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        callback({ data: res.data })\r\n      }\r\n      return false;\r\n    })\r\n      .catch(error => {\r\n      \tcallback({ error: error })\r\n      });\r\n\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function CompleteTodoApi(todoId, callback) {\r\n    axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n            completed: true\r\n          })\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        callback({ data: res.data })\r\n      }\r\n      return false;\r\n    })\r\n      .catch(error => {\r\n      \tcallback({ error: error })\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function IncompleteTodoApi(todoId, callback) {\r\n    axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n        completed: false\r\n      })\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        callback({ data: res.data })\r\n      }\r\n      return false;\r\n    })\r\n      .catch(error => {\r\n      \tcallback({ error: error })\r\n    });\r\n}","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n                <footer className=\"text-muted\">\r\n                    <div className=\"container\">\r\n                        <p className=\"float-right\">\r\n                        <a href=\"/\">Back to top</a>\r\n                        </p>\r\n                        <p>Roel John Bobis &copy; Basic Todo App created using ReactJS</p>\r\n                    </div>\r\n                </footer> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { settings } from './../settings'\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            dropdown: false,\r\n            countNotification: ''\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        setInterval(() => this.setState({ countNotification: settings.notification.length}), 1000)\r\n    }\r\n    onShowNotification(){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { dropdown: !this.state.dropdown };\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={'bg-dark'}>\r\n                <div className={'container'}>\r\n                <nav className=\"navbar navbar-expand-lg\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Todo's React App</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarsExample09\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        {/* <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Link</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown09\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdown09\">\r\n                            <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                        </div>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className={`dropdown ${this.state.dropdown ? 'show' : 'hide'}`}>\r\n                                <a onClick={this.onShowNotification.bind(this)} className=\"btn btn-notification\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <i className=\"fas fa-bell\"></i> <span className=\"badge badge-light\">{this.state.countNotification}</span>\r\n                                </a>\r\n\r\n                                <div className={`dropdown-menu ${this.state.dropdown ? 'show' : 'hide'}`} aria-labelledby=\"dropdownMenuLink\">\r\n                                {settings.notification.map((notify, id) => {\r\n                                    return(\r\n                                        <a className=\"dropdown-item\" href=\"#\">{notify.title}</a>\r\n                                    )\r\n                                })}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </nav>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { Home } from './pages'\r\nimport { Header, Footer } from './templates'\r\nimport './App.css';\r\nimport './album.css'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n<Header/>\r\n<main role=\"main\">\r\n\r\n  <section className=\"jumbotron text-center todo-jumbotron\">\r\n    <div className=\"container\">\r\n      <h1 className=\"jumbotron-heading\">Todo Demo</h1>\r\n      <p className=\"lead text-muted\">This demo is just portfolio purpose only. I'm not intend to sell this react app. This todo app can do basic todo's function.</p>\r\n      <p className=\"lead text-muted\">Notes: This todo react app is not yet responsive. I have a plan but don't have a time yet. There are some features\r\n      too that not yet available like the notification and even the alert message. </p>\r\n      <p>\r\n        <a href=\"/\" className=\"btn btn-primary m-2\">Github</a>\r\n        <a href=\"/\" className=\"btn btn-secondary m-2\">Documentation</a>\r\n      </p>\r\n    </div>\r\n  </section>\r\n\r\n  <div className=\"album py-5 bg-light\">\r\n    <div className=\"container\">\r\n    <Route exact path={`/`} render={ (routerProps) => < Home routerProps={routerProps} />} />\r\n        {/* <Route path=\"/\" exact component={() => <Home />} /> */}\r\n    </div>\r\n  </div>\r\n\r\n</main>\r\n<Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}