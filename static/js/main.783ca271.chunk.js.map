{"version":3,"sources":["settings.js","components/dateBadge.js","pages/home.js","templates/footer.js","templates/header.js","App.js","serviceWorker.js","index.js"],"names":["settings","notification","DateBadge","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startDate","Date","endDate","currentDate","handleChangeEnd","bind","assertThisInitialized","handleChangeStart","date","setState","moment","isMoment","diff","className","_this$state","daysLeft","calculateDaysLeft","react_default","a","createElement","concat","dist_default","fromNow","Component","Home","addModal","modal","delete","dropdown","id","todoId","title","userId","completed","archived","dueDate","todos","getTodos","_this2","axios","get","then","response","data","catch","error","console","log","arrId","_this3","put","newArray","assign","newNotification","push","_this4","length","_this5","filter","todo","_this6","post","_this7","_this8","_this9","_this10","_this11","e","target","value","_this12","_this13","type","data-toggle","data-placement","onClick","onShowAddModal","map","format","onComplete","name","dateBadge","onShowModal","getTodo","data-target","onArchive","toString","inComplete","defaultChecked","disabled","onUnarchive","deleteWarning","style","display","paddingRight","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","onChange","onChangeTitle","es","selected","timeFormat","dateFormat","onChangeDate","onEdit","onAdd","class","onDelete","Footer","href","Header","countNotification","setInterval","aria-controls","aria-expanded","onShowNotification","aria-haspopup","notify","App","header","react_router","path","exact","component","home","footer","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.783ca271.chunk.js","sourcesContent":["export const settings = {\r\n    notification: []\r\n}\r\n  ","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\nimport moment from \"moment\";\r\n\r\nclass DateBadge extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          startDate: new Date(),\r\n          endDate: this.props.endDate,\r\n          currentDate: new Date()\r\n        };\r\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\r\n        this.handleChangeStart = this.handleChangeStart.bind(this);\r\n      }\r\n    \r\n      handleChangeStart(date) {\r\n        this.setState({\r\n          startDate: date\r\n        });\r\n      }\r\n    \r\n      handleChangeEnd(date) {\r\n        this.setState({\r\n          endDate: date\r\n        });\r\n      }\r\n    \r\n      calculateDaysLeft(startDate, endDate) {\r\n        if (!moment.isMoment(startDate)) startDate = moment(startDate);\r\n        if (!moment.isMoment(endDate)) endDate = moment(endDate);\r\n    \r\n        return endDate.diff(startDate, \"days\");\r\n      }\r\n    render() {\r\n        const { startDate, endDate } = this.state;\r\n\r\n        const daysLeft = this.calculateDaysLeft(startDate, endDate);\r\n        let className;\r\n        if (daysLeft <= 1){\r\n            className = 'badge-danger';\r\n        } else if (daysLeft >= 2 && daysLeft <= 5){\r\n            className = 'badge-warning';\r\n        } else if (daysLeft > 5 && daysLeft < 11 ){\r\n            className = 'badge-info';\r\n        } else {\r\n            className = 'badge-primary';\r\n        }\r\n        return (\r\n                <span className={`badge ${className}`}>Due <Moment fromNow>{this.props.currentDate}</Moment></span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DateBadge;","import React, { Component } from 'react';\r\nimport { settings } from './../settings';\r\nimport DateBadge from './../components/dateBadge'\r\nimport Datepicker from 'react-datepicker'\r\nimport moment from 'moment'\r\nimport axios from 'axios';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            addModal: false,\r\n            modal: false,\r\n            delete: false,\r\n            dropdown: false,\r\n            id: '',\r\n            todoId: '', \r\n            title: '',\r\n            userId: '',\r\n            completed: false,\r\n            archived: false,\r\n            dueDate: moment(),\r\n            todos: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getTodos();\r\n    }\r\n    getTodos() {\r\n          axios.get('https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos')\r\n          .then(response => {\r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: response.data };\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          })\r\n    }\r\n\r\n    getTodo(id, todoId, userId, title, archived, completed, dueDate){\r\n        this.setState(\r\n            (state, props) => {\r\n              return {\r\n                arrId: id, \r\n                id: todoId,\r\n                userId: userId,\r\n                title: title,\r\n                completed: completed,\r\n                archived: archived,\r\n                dueDate:dueDate,\r\n            };\r\n        });\r\n    }\r\n    onComplete(id, todoId, userId, title, archived, dueDate){\r\n        axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n            completed: true\r\n          })\r\n        .then(response => {\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray[id]=({\r\n                id:`${todoId}`,\r\n                userId: userId,\r\n                title: title,\r\n                completed: true,\r\n                archived: archived,\r\n                dueDate:dueDate,\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { \r\n                      todos: newArray\r\n                };\r\n            });\r\n        let newNotification = Object.assign([], settings.notification);\r\n        newNotification.push({\r\n            id:`${todoId}`,\r\n            userId: userId,\r\n            title: title,\r\n            completed: true,\r\n            archived: archived,\r\n            dueDate:dueDate,\r\n        }); \r\n        settings.notification = newNotification;\r\n        console.log(newNotification)\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    inComplete(id, todoId, userId, title, archived, dueDate){\r\n        axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n            completed: false\r\n          })\r\n        .then(response => {\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray[id]=({\r\n                id:`${todoId}`,\r\n                userId: userId,\r\n                title: title,\r\n                completed: false,\r\n                archived: archived,\r\n                dueDate:dueDate,\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { \r\n                      todos: newArray\r\n                };\r\n            });\r\n        let newNotification = Object.assign([], settings.notification);\r\n        newNotification.push({\r\n            id:`${todoId}`,\r\n            userId: userId,\r\n            title: title,\r\n            completed: true,\r\n            archived: archived,\r\n            dueDate:dueDate,\r\n        }); \r\n        settings.notification = newNotification;\r\n        console.log(settings.notification.length)\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onDelete(todoId){\r\n        axios.delete(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`)\r\n        .then(response => {\r\n            const todos = this.state.todos.filter(todo => todo.id !== todoId)\r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos };\r\n            });\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onAdd(title, dueDate){\r\n        console.log()\r\n        axios.post('https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos', {\r\n            title: this.state.title,\r\n            startDate: new Date(),\r\n            dueDate: this.state.dueDate\r\n          })\r\n          .then(response => {\r\n            console.log(response.data.id);\r\n\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray.push({\r\n                id: response.data.id,\r\n                userId: 26,\r\n                title: title,\r\n                completed: false,\r\n                archived: false,\r\n                dueDate: dueDate,\r\n                startDate: new Date()\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: newArray };\r\n            });\r\n            })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n    onEdit(){\r\n        axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${this.state.id}`, {\r\n            userId: this.state.userId,\r\n            title: this.state.title,\r\n            completed: this.state.completed,\r\n            archived: this.state.archived,\r\n            dueDate: this.state.dueDate\r\n          })\r\n        .then(response => {\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray[this.state.arrId]=({\r\n                id:`${this.state.id}`,\r\n                userId: this.state.userId,\r\n                title: this.state.title,\r\n                completed: this.state.completed,\r\n                archived: this.state.archived,\r\n                dueDate: this.state.dueDate,\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: newArray };\r\n            });\r\n        console.log(this.state.todos)\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onArchive(id, todoId, userId, title, completed, dueDate){\r\n        axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n            archived: true\r\n          })\r\n        .then(response => {\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray[id]=({\r\n                id:`${todoId}`,\r\n                userId: userId,\r\n                title: title,\r\n                completed: completed,\r\n                archived: true,\r\n                dueDate:dueDate,\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: newArray };\r\n            });\r\n        let newNotification = Object.assign([], settings.notification);\r\n        newNotification.push({\r\n            id:`${todoId}`,\r\n            userId: userId,\r\n            title: title,\r\n            completed: completed,\r\n            archived: true,\r\n            dueDate: dueDate,\r\n        }); \r\n        settings.notification = newNotification;\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onUnarchive(id, todoId, userId, title, completed, dueDate){\r\n        axios.put(`https://5cea41c50c871100140bf437.mockapi.io/api/v1/todos/${todoId}`, {\r\n            archived: false\r\n          })\r\n        .then(response => {\r\n            let newArray = Object.assign([], this.state.todos); //creating copy of object\r\n            newArray[id]=({\r\n                id:`${todoId}`,\r\n                userId: userId,\r\n                title: title,\r\n                completed: completed,\r\n                archived: false,\r\n                dueDate:dueDate,\r\n            }); \r\n            this.setState(\r\n                (state, props) => {\r\n                  return { todos: newArray };\r\n            });\r\n        console.log(this.state.todos)\r\n        })\r\n        .catch(error => {\r\n        console.log(error);\r\n        })\r\n    }\r\n    onShowModal(){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { modal: !this.state.modal };\r\n        });\r\n    }\r\n    onShowAddModal(){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { addModal: !this.state.addModal };\r\n        });\r\n    }\r\n    onChangeTitle(e){\r\n        // this.setState(\r\n        //     (state, props) => {\r\n        //       return { title: e.target.value };\r\n        // });\r\n        this.setState(({\r\n            title: e.target.value\r\n        }));  \r\n    }\r\n    onChangeDate(date){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { dueDate: date };\r\n        });\r\n    }\r\n    deleteWarning(todoId){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { \r\n                  delete: !this.state.delete, \r\n                  todoId: todoId\r\n            };\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={'row todo-page'}>\r\n                    <div className=\"col-md-4\">\r\n                        <h3>\r\n                            <div className={'row'}>\r\n                                <div className={'col-md-6'}>\r\n                                    Todo's \r\n                                </div>\r\n                                <div className={'col-md-6'}>\r\n                                <button type=\"button\" className=\"btn btn-sm btn-primary btn-archive float-right\" data-toggle=\"modal\" data-placement=\"top\" title=\"Add Todo\"\r\n                                onClick={() => \r\n                                                            {\r\n                                                                this.onShowAddModal()\r\n                                                            }\r\n                                                        }  ><i className=\"fas fa-plus\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </h3>\r\n                        <div className=\"card mb-4 shadow-sm border-info\">\r\n                            <ul className=\"list-group\">\r\n                                {this.state.todos.map((todo, id) => {\r\n                                    const currentDate = moment(todo.dueDate).format('MMMM DD YYYY, h:mm:ss a');\r\n                                   \r\n                                    if(todo.completed === false && todo.archived === false){\r\n                                        return(\r\n                                            <li className=\"list-group-item\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col col-lg-1\">\r\n                                                        <input onClick={() => \r\n                                                            this.onComplete(id, todo.id, todo.userId, todo.title, todo.archived, todo.dueDate)} type=\"checkbox\" name=\"complete\"/>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-8 todo-text\">\r\n                                                    <p>{todo.title} <DateBadge currentDate={currentDate} startDate={todo.startDate} endDate={todo.dueDate}/></p>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-3 todo-edit-btn\">\r\n                                                        <button type=\"button\" className=\"btn btn-primary btn-edit\" onClick={() => \r\n                                                            {\r\n                                                                this.onShowModal()\r\n                                                                this.getTodo(id, todo.id, todo.userId, todo.title, todo.archived, todo.completed, currentDate)\r\n                                                            }\r\n                                                        }  data-toggle=\"modal\" data-target=\"#exampleModal\"><i className=\"fas fa-pen\"></i></button>\r\n                                                        <button onClick={() => this.onArchive(id, todo.id, todo.userId, todo.title, todo.completed, todo.dueDate)} type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Archive Todo\" className=\"btn btn-primary btn-archive\"><i className=\"fas fa-archive\"></i></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                })}\r\n\r\n                            </ul>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                    <h3>Done</h3>\r\n                    <div className=\"card mb-4 shadow-sm border-success done\">\r\n                        <ul className=\"list-group\">\r\n                            {this.state.todos.map((todo, id) => {\r\n                                const currentDate = new Date(todo.dueDate).toString()\r\n                                if(todo.completed === true && todo.archived === false){\r\n                                    return(\r\n                                        <li className=\"list-group-item\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col col-lg-1\">\r\n                                                <input onClick={() => \r\n                                                            this.inComplete(id, todo.id, todo.userId, todo.title, todo.archived, todo.dueDate)} type=\"checkbox\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Not Done\" name=\"incomplete\" defaultChecked={true}/>\r\n                                                </div>\r\n                                                <div className=\"col-lg-8 todo-text\">\r\n                                                <p>{todo.title} <DateBadge currentDate={currentDate} startDate={todo.startDate} endDate={todo.dueDate}/></p>\r\n                                                </div>\r\n                                                <div className=\"col-lg-3 todo-edit-btn\">\r\n                                                <button type=\"button\" className=\"btn btn-primary btn-edit\" onClick={() => \r\n                                                            {\r\n                                                                this.onShowModal()\r\n                                                                this.getTodo(id, todo.id, todo.userId, todo.title, todo.archived, todo.completed, currentDate)\r\n                                                            }\r\n                                                        }  data-toggle=\"modal\" data-target=\"#exampleModal\" disabled><i className=\"fas fa-pen\"></i></button>\r\n                                                <button onClick={() => this.onArchive(id, todo.id, todo.userId, todo.title, todo.completed, todo.dueDate)} type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Archive Todo\" className=\"btn btn-primary btn-archive\"><i className=\"fas fa-archive\"></i></button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <h3>Archive</h3>\r\n                            <div className=\"card mb-4 shadow-sm border-danger archive\">\r\n                                <ul className=\"list-group\">\r\n                                {this.state.todos.map((todo, id) => {\r\n                                    const currentDate = new Date(todo.dueDate).toString()\r\n                                    if(todo.archived === true){\r\n                                        return(\r\n                                            <li className=\"list-group-item\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col col-lg-1\">\r\n                                                    <button onClick={() => this.onUnarchive(id, todo.id, todo.userId, todo.title, todo.completed, todo.dueDate)} type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unarchive Todo\" className=\"btn btn-primary btn-unarchive\"><i className=\"fas fa-box-open\"></i></button>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-8 todo-text\">\r\n                                                    <p>{todo.title} <DateBadge currentDate={currentDate} startDate={todo.startDate} endDate={todo.dueDate}/></p>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-3 todo-edit-btn\">\r\n                                                    <button type=\"button\" className=\"btn btn-primary btn-edit\" onClick={() => \r\n                                                            {\r\n                                                                this.onShowModal()\r\n                                                                this.getTodo(id, todo.id, todo.userId, todo.title, todo.archived, todo.completed, currentDate)\r\n                                                            }\r\n                                                        }  data-toggle=\"modal\" data-target=\"#exampleModal\" disabled><i className=\"fas fa-pen\"></i></button>\r\n                                                    <button type=\"button\" onClick={() => {\r\n                                                        // this.onDelete(id, todo.id)\r\n                                                        this.deleteWarning(todo.id)\r\n                                                    }}  className=\"btn btn-delete-forever\" data-toggle=\"modal\" data-target=\"#deleteWarning\" ><i className=\"fas fa-trash-alt\"></i></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    } \r\n                                })}\r\n                                </ul>\r\n                            </div>\r\n                    </div>\r\n                    {/* Edit Modal */}\r\n                    <div className={`modal fade ${this.state.modal ? 'show' : 'hide'}`} id=\"addModal\" style={{display: `${this.state.modal ? 'block' : ''}`, paddingRight:  `${this.state.modal ? '17px' : ''}`}}  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Todo</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <label>Title</label>\r\n                            <input onChange={this.onChangeTitle.bind(this)} className={'form-control'} type=\"text\" name=\"title\" value={this.state.title}/>\r\n                            <label>Due Date</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-append\">\r\n                                        <Datepicker\r\n                                            className={'form-control'}\r\n                                            selected={new Date(this.state.dueDate)}\r\n                                            timeFormat=\"HH:mm\"\r\n                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                            onChange={this.onChangeDate.bind(this)}\r\n                                        />\r\n                                        <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                            <i className={'fa fa-calendar'}></i>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={() => {\r\n                            this.onShowModal()\r\n                            this.setState(\r\n                                (state, props) => {\r\n                                  return { title: '' };\r\n                            })\r\n                        }} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button onClick={this.onEdit.bind(this)}  type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div> \r\n                    {/* Add Modal */}\r\n                    <div className={`modal fade ${this.state.addModal ? 'show' : 'hide'}`} id=\"exampleModal\" style={{display: `${this.state.addModal ? 'block' : ''}`, paddingRight:  `${this.state.addModal ? '17px' : ''}`}}  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Todo</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <label>Title</label>\r\n                            <input onChange={this.onChangeTitle.bind(this)} className={'form-control'} type=\"text\" name=\"title\" value={this.state.title}/>\r\n                            <label>Due Date</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-append\">\r\n                                        <Datepicker\r\n                                            className={'form-control'}\r\n                                            selected={new Date()}\r\n                                            timeFormat=\"HH:mm\"\r\n                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                            onChange={this.onChangeDate.bind(this)}\r\n                                        />\r\n                                        <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                                            <i className={'fa fa-calendar'}></i>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={() => {\r\n                                this.onShowAddModal()\r\n                                this.setState(\r\n                                    (state, props) => {\r\n                                      return { title: '' };\r\n                                });\r\n                            }} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button onClick={() => {\r\n                                this.onAdd(this.state.title, this.state.dueDate)\r\n                                this.onShowAddModal()\r\n                                this.setState(\r\n                                    (state, props) => {\r\n                                      return { title: '' };\r\n                                })\r\n                            }}  type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div> \r\n                    {/* Delete Modal */}\r\n                    <div className={`modal modal-delete fade ${this.state.delete ? 'show' : 'hide'}`} id=\"deleteWarning\" style={{display: `${this.state.delete ? 'block' : ''}`, paddingRight:  `${this.state.delete ? '17px' : ''}`}}  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Are you sure you want to do this?</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <i class=\"fas fa-exclamation-triangle\"></i>\r\n                            <h5>Deleting this will be permanently gone in your database</h5>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={() => {\r\n                                this.deleteWarning()\r\n                            }} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button onClick={() => {\r\n                                this.onDelete(this.state.todoId)\r\n                                this.deleteWarning()\r\n                                this.setState(\r\n                                    (state, props) => {\r\n                                      return { title: '' };\r\n                                })\r\n                            }}  type=\"button\" className=\"btn btn-primary\">Delete</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n                <footer className=\"text-muted\">\r\n                    <div className=\"container\">\r\n                        <p className=\"float-right\">\r\n                        <a href=\"/\">Back to top</a>\r\n                        </p>\r\n                        <p>Roel John Bobis &copy; Basic Todo App created using ReactJS</p>\r\n                    </div>\r\n                </footer> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { settings } from './../settings'\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            dropdown: false,\r\n            countNotification: ''\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        setInterval(() => this.setState({ countNotification: settings.notification.length}), 1000)\r\n    }\r\n    onShowNotification(){\r\n        this.setState(\r\n            (state, props) => {\r\n              return { dropdown: !this.state.dropdown };\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={'bg-dark'}>\r\n                <div className={'container'}>\r\n                <nav className=\"navbar navbar-expand-lg\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Todo's React App</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarsExample09\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        {/* <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Link</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown09\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdown09\">\r\n                            <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                        </div>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className={`dropdown ${this.state.dropdown ? 'show' : 'hide'}`}>\r\n                                <a onClick={this.onShowNotification.bind(this)} className=\"btn btn-notification\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <i className=\"fas fa-bell\"></i> <span className=\"badge badge-light\">{this.state.countNotification}</span>\r\n                                </a>\r\n\r\n                                <div className={`dropdown-menu ${this.state.dropdown ? 'show' : 'hide'}`} aria-labelledby=\"dropdownMenuLink\">\r\n                                {settings.notification.map((notify, id) => {\r\n                                    return(\r\n                                        <a className=\"dropdown-item\" href=\"#\">{notify.title}</a>\r\n                                    )\r\n                                })}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </nav>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { Home } from './pages'\r\nimport { Header, Footer } from './templates'\r\nimport './App.css';\r\nimport './album.css'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n<Header/>\r\n<main role=\"main\">\r\n\r\n  <section className=\"jumbotron text-center todo-jumbotron\">\r\n    <div className=\"container\">\r\n      <h1 className=\"jumbotron-heading\">Todo Demo</h1>\r\n      <p className=\"lead text-muted\">This demo is just portfolio purpose only. I'm not intend to sell this react app. This todo app can do basic todo's function.</p>\r\n      <p className=\"lead text-muted\">Notes: This todo react app is not yet responsive. I have a plan but don't have a time yet. There are some features\r\n      too that not yet available like the notification and even the alert message. </p>\r\n      <p>\r\n        <a href=\"/\" className=\"btn btn-primary m-2\">Github</a>\r\n        <a href=\"/\" className=\"btn btn-secondary m-2\">Documentation</a>\r\n      </p>\r\n    </div>\r\n  </section>\r\n\r\n  <div className=\"album py-5 bg-light\">\r\n    <div className=\"container\">\r\n        <Route path=\"/\" exact component={() => <Home />} />\r\n    </div>\r\n  </div>\r\n\r\n</main>\r\n<Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}